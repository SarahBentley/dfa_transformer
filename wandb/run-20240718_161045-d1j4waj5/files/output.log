number of parameters: 0.04M
num decayed parameter tensors: 10, with 40,760 parameters
num non-decayed parameter tensors: 18, with 1,120 parameters
using fused AdamW: False
Epoch 1/10, Avg Training Loss: 1.0734357368946075
{'epoch': 0, 'loss': 1.0734357368946075, 'macro_accuracy': 0.7276785714285714, 'micro_accuracy': 0.7333333333333333, 'auc': 0.8428953360653, 'mAP': 0.6182739873407741}
Epoch 2/10, Avg Training Loss: 0.6055297118425369
Skipping AUC calculation for class <pad> as it has only one class present in true labels.
{'epoch': 1, 'loss': 0.6055297118425369, 'macro_accuracy': nan, 'micro_accuracy': 0.7791666666666667, 'auc': 0.8275465624358092, 'mAP': 0.5588338379921962}
/Users/sarahbentley/dfa_transformer/venv/lib/python3.10/site-packages/numpy/lib/function_base.py:520: RuntimeWarning: Mean of empty slice.
  avg = a.mean(axis, **keepdims_kw)
/Users/sarahbentley/dfa_transformer/venv/lib/python3.10/site-packages/numpy/core/_methods.py:129: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
/Users/sarahbentley/dfa_transformer/venv/lib/python3.10/site-packages/sklearn/metrics/_ranking.py:1030: UserWarning: No positive class found in y_true, recall is set to one for all thresholds.
  warnings.warn(
Epoch 3/10, Avg Training Loss: 0.4133749908208847
{'epoch': 2, 'loss': 0.4133749908208847, 'macro_accuracy': 0.8220238095238095, 'micro_accuracy': 0.8708333333333333, 'auc': 0.9011398915348346, 'mAP': 0.7242945024666083}
Epoch 4/10, Avg Training Loss: 0.3252250501513481
{'epoch': 3, 'loss': 0.3252250501513481, 'macro_accuracy': 0.9775595238095238, 'micro_accuracy': 0.9875, 'auc': 0.9878398792339498, 'mAP': 0.9433734126984127}
Epoch 5/10, Avg Training Loss: 0.3107649564743042
{'epoch': 4, 'loss': 0.3107649564743042, 'macro_accuracy': 0.9446097883597884, 'micro_accuracy': 0.9708333333333333, 'auc': 0.9700059151736199, 'mAP': 0.9198662468597814}
Epoch 6/10, Avg Training Loss: 0.3041014131903648
{'epoch': 5, 'loss': 0.3041014131903648, 'macro_accuracy': 0.9591724825523429, 'micro_accuracy': 0.9666666666666667, 'auc': 0.9769616209044016, 'mAP': 0.9274288650405988}
Epoch 7/10, Avg Training Loss: 0.30262601613998413
{'epoch': 6, 'loss': 0.30262601613998413, 'macro_accuracy': 1.0, 'micro_accuracy': 1.0, 'auc': 1.0, 'mAP': 1.0}
Epoch 8/10, Avg Training Loss: 0.3187841084599495
{'epoch': 7, 'loss': 0.3187841084599495, 'macro_accuracy': 1.0, 'micro_accuracy': 1.0, 'auc': 1.0, 'mAP': 1.0}
Epoch 9/10, Avg Training Loss: 0.3018990308046341
{'epoch': 8, 'loss': 0.3018990308046341, 'macro_accuracy': 1.0, 'micro_accuracy': 1.0, 'auc': 1.0, 'mAP': 1.0}
[34m[1mwandb[39m[22m: [33mWARNING[39m Saving files without folders. If you want to preserve subdirectories pass base_path to wandb.save, i.e. wandb.save("/mnt/folder/file.h5", base_path="/mnt")
Epoch 10/10, Avg Training Loss: 0.30256007581949235
{'epoch': 9, 'loss': 0.30256007581949235, 'macro_accuracy': 1.0, 'micro_accuracy': 1.0, 'auc': 1.0, 'mAP': 1.0}
Traceback (most recent call last):
  File "/Users/sarahbentley/.julia/conda/3/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/Users/sarahbentley/.julia/conda/3/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/Users/sarahbentley/dfa_transformer/src/GPT/train.py", line 114, in <module>
    main(args)
  File "/Users/sarahbentley/dfa_transformer/src/GPT/train.py", line 107, in main
    visualizations = visualize_final_metrics(tgt_pred, pred)
  File "/Users/sarahbentley/dfa_transformer/src/utils/visualizations.py", line 54, in visualize_final_metrics
    precision_recall_fscore_plot = go.Figure()
  File "/Users/sarahbentley/dfa_transformer/venv/lib/python3.10/site-packages/plotly/graph_objs/_figure.py", line 642, in __init__
    super(Figure, self).__init__(data, layout, frames, skip_invalid, **kwargs)
  File "/Users/sarahbentley/dfa_transformer/venv/lib/python3.10/site-packages/plotly/basedatatypes.py", line 577, in __init__
    from plotly.offline.offline import _get_jconfig
  File "/Users/sarahbentley/dfa_transformer/venv/lib/python3.10/site-packages/plotly/offline/__init__.py", line 6, in <module>
    from .offline import (
  File "/Users/sarahbentley/dfa_transformer/venv/lib/python3.10/site-packages/plotly/offline/offline.py", line 11, in <module>
    from plotly import tools
  File "<frozen importlib._bootstrap>", line 1075, in _handle_fromlist
  File "/Users/sarahbentley/dfa_transformer/venv/lib/python3.10/site-packages/_plotly_utils/importers.py", line 29, in __getattr__
    return importlib.import_module(rel_import, parent_name)
  File "/Users/sarahbentley/.julia/conda/3/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "/Users/sarahbentley/dfa_transformer/venv/lib/python3.10/site-packages/plotly/tools.py", line 64, in <module>
    ipython_core_display = optional_imports.get_module("IPython.core.display")
  File "/Users/sarahbentley/dfa_transformer/venv/lib/python3.10/site-packages/_plotly_utils/optional_imports.py", line 28, in get_module
    return import_module(name)
  File "/Users/sarahbentley/.julia/conda/3/lib/python3.10/importlib/__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "/Users/sarahbentley/dfa_transformer/venv/lib/python3.10/site-packages/IPython/__init__.py", line 55, in <module>
    from .terminal.embed import embed
  File "/Users/sarahbentley/dfa_transformer/venv/lib/python3.10/site-packages/IPython/terminal/embed.py", line 110, in <module>
    class _Sentinel:
KeyboardInterrupt